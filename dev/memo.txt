生成に必要な情報量に対して生成されるデータサイズが大きい要素
  noise, self-occlusion, etc...
  いつテクスチャに乗せるべきか?
  1.オフライン
    Blenderアドオンなどであらかじめ用意する方法
    複雑なノイズでもランタイムの計算量を消費しない
    ストレージ上のサイズが膨らむ
    ストレージからメモリへの転送資源と、それに伴う時間を食う
  2.ランタイム(ロード時)
    テクスチャをロードする際に書き込む方法
    ストレージ上のサイズが小さい
    ロード時に計算資源と、それに伴う時間を食う
  3.レンダリング時
    テクスチャに書き込まず、フラグメントシェーダで直接計算する方法
    ストレージ上のサイズ、メモリ上のサイズが小さい
    レンダリング時に計算資源と、それに伴う時間を食う
2を主なターゲットとする

TypeScript + BabylonJS (+ SolidJS)


canvas_diffuse, canvas_bump, ...
  それぞれ engine, scene 作る
  画面いっぱいにレンダ
canvas_view
  box に StandardMaterial
  material.diffuseTexture, .bumpTexture に DynamicTexture 割り当て

BabylonJS試用
モデル+テクスチャの表示
モデル情報を用いて新規テクスチャを描画
編集後のモデル+テクスチャ表示


メッシュをvertexシェーダでUVに展開
  頂点のUV情報に従う(メッシュを実行時生成する場合、UVも生成する)
faceをテクスチャ(color, bump, etc...)に描画していく
  描画位置はUVに依存
  色は3Dモデル上の座標に依存
  法線も欲しい
